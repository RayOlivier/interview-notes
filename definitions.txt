My favorite brief definitions of web dev terms

-Event Loop: "The event loop is the term given to the process of the waiting for the queue to receive a message synchronously. The increment that the event loop moves in is called a ‘tick’, and every time it ‘ticks’ it checks if the call stack is empty, if so , it adds the top function in the event queue to the call stack and executes it. Once it is finished processing this function it starts ticking again."
    >"A very interesting property of the event loop model is that JavaScript, unlike a lot of other languages, NEVER BLOCKS."
    >"Javascript is capable of Asynchronous operations through the SINGLE THREAD of execution. This means that an event such as a database request can be performed and while the request is being performed other events can still be performed such as a user scrolling or entering data."

-Hoisting: "Hoisting is JavaScript's default behavior of moving declarations to the top."
    >Basically, it doesn't matter where you declare something in your code. But it matters if you assign it a value. (ie, var x; can go anywhere but var x=10 can not)

-REST: "REpresentational State Transfer, is an architectural style for providing standards between computer systems on the web, making it easier for systems to communicate with each other. REST-compliant systems, often called RESTful systems, are characterized by how they are STATELESS and separate the concerns of client and server."
    >"Systems that follow the REST paradigm are STATELESS, meaning that the server does not need to know anything about what state the client is in and vice versa"
    >uses HTTP GET, PUT, POST, DELETE
    >so this refers to RESTful api, and an alternative is SOAP

-Closures: "Global variables can be made local (private) with closures."
    >function myFunction() {
        var a = 4; //now a can only be accessed by calling this function
        return a * a;
        }

-SCSS/SASS: "SASS (Syntactically Awesome Stylesheet) is a CSS pre-processor which helps to reduce repetition with CSS and saves time. It is more stable and powerful CSS extension language that describes style of document cleanly and structurally."
    >advantages: EASIER TO READ, nesting, MIXINS, faster to write, is now built in to create-react-app
    >disadvantages: learning curve, you have to try to make all devs use it or it's awkward, "chances of losing benefits of browser's built-in element inspector"
    >SASS is a superset of CSS

-Inner Join: compares the commonalities in a table and returns only those. EX: the middle of a venn diagram

-Outer Join: combines and returns ALL of the data from 2+ tables. EX: a full outer is the entire venn... a left outer is the left circle of the venn.

*-Event Delegation: "Event delegation allows you to avoid adding event listeners to specific nodes;  instead, the event listener is added to one parent.  That event listener analyzes bubbled events to find a match on child elements."

-AJAX: "Asynchronous Javascript and XML. AJAX is a misleading name. AJAX applications might use XML to transport data, but it is equally common to transport data as plain text or JSON text."  
    >This is just basically referring to async stuff

-Webpack: "Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset."
    >create-react-app has webpack built in